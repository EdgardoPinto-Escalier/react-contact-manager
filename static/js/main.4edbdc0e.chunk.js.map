{"version":3,"sources":["context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","TextInputGroup","_ref","label","name","placeholder","onChange","error","className","htmlFor","Classnames","is-invalid","defaultProps","AddContact","email","phone","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this2","_this$state2","bind","layout_TextInputGroup","EditContact","updateContact","match","params","put","Contact","showContactInfo","onDeleteClick","delete","t0","_this$props$contact","onClick","style","cursor","float","color","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4edbdc0e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>\n        <i className=\"fas fa-plus-square\" /> {label}\n      </label>\n      <input\n        type={type}\n        name={name}\n        className={Classnames(\"form-control\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for any errors on submit.\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // Clear the form after submit (clear state).\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    //Re-direct back to home after adding new contact.\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"container\">\n              <h1 className=\"my-4\">\n                <i className=\"fas fa-user-plus\" />\n                <span className=\"text-primary\"> ADD</span> NEW CONTACT\n              </h1>\n\n              <div className=\"card mb-3\">\n                <div className=\"card-header\">\n                  <i className=\"far fa-address-card fa-lg\" /> ADD CONTACT\n                </div>\n                <div className=\"card-body\">\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                    <TextInputGroup\n                      label=\"Name\"\n                      name=\"name\"\n                      placeholder=\"Enter Name\"\n                      value={name}\n                      onChange={this.onChange}\n                      error={errors.name}\n                    />\n                    <TextInputGroup\n                      label=\"Email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Enter Email\"\n                      value={email}\n                      onChange={this.onChange}\n                      error={errors.email}\n                    />\n                    <TextInputGroup\n                      label=\"Phone\"\n                      name=\"phone\"\n                      placeholder=\"Enter Phone\"\n                      value={phone}\n                      onChange={this.onChange}\n                      error={errors.phone}\n                    />\n\n                    <input\n                      type=\"submit\"\n                      value=\"ADD NEW CONTACT\"\n                      className=\"btn btn-block btn-primary\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check for any errors on submit.\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    // Clear the form after submit (clear state).\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    //Re-direct back to home after adding new contact.\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"container\">\n              <h1 className=\"my-4\">\n                <i className=\"fas fa-user-edit\" />\n                <span className=\"text-primary\"> EDIT</span> CONTACT\n              </h1>\n\n              <div className=\"card mb-3\">\n                <div className=\"card-header\">\n                  <i className=\"fas fa-edit fa-lg\" /> EDIT CONTACT\n                </div>\n                <div className=\"card-body\">\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                    <TextInputGroup\n                      label=\"Name\"\n                      name=\"name\"\n                      placeholder=\"Enter Name\"\n                      value={name}\n                      onChange={this.onChange}\n                      error={errors.name}\n                    />\n                    <TextInputGroup\n                      label=\"Email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Enter Email\"\n                      value={email}\n                      onChange={this.onChange}\n                      error={errors.email}\n                    />\n                    <TextInputGroup\n                      label=\"Phone\"\n                      name=\"phone\"\n                      placeholder=\"Enter Phone\"\n                      value={phone}\n                      onChange={this.onChange}\n                      error={errors.phone}\n                    />\n\n                    <input\n                      type=\"submit\"\n                      value=\"UPDATE CONTACT\"\n                      className=\"btn btn-block btn-primary\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                <i className=\"fas fa-user-tag\" /> {name}{\" \"}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-trash-alt\"\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"right\",\n                    color: \"#007bff\"\n                  }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fa fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      marginRight: \"10px\",\n                      color: \"#007bff\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    <i className=\"fas fa-at\" /> Email: {email}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <i className=\"fas fa-phone\" /> Phone: {phone}\n                  </li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <div className=\"container\">\n                <h1 className=\"my-4\">\n                  <i className=\"fas fa-clipboard-list\" />\n                  <span className=\"text-primary\"> CONTACT</span> LIST\n                </h1>\n                {contacts.map(contact => (\n                  <Contact key={contact.id} contact={contact} />\n                ))}\n              </div>\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\n      <div className=\"container my-2\">\n        <a href=\"/\" className=\"navbar-brand\">\n          <i className=\"fab fa-react fa-lg\" /> {branding}\n        </a>\n\n        <button\n          className=\"navbar-toggler my-2\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> HOME\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus-square\" /> ADD\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-info-circle\" /> ABOUT\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div className=\"container\">\n      <h1 className=\"my-4\">\n        <i className=\"fas fa-info-circle\" /> ABOUT{\" \"}\n        <span className=\"text-primary\">REACT CONTACT MANAGER</span>\n      </h1>\n      <p className=\"lead\">Simple React contact manager application</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"my-4\">\n        <i className=\"far fa-question-circle\" />{\" \"}\n        <span className=\"text-primary\">404</span> PAGE NOT FOUND\n      </h1>\n      <p className=\"lead\">\n        Sorry the page you are looking for doesn't exist...\n      </p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"./context\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"REACT CONTACT MANAGER\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}